////////////////////AUTOGENERATED XIB EXPORTED CODE - DO NOT ALTER////////////////////

#pragma once

#include "ofxGenericView.h"
#include "ofxGenericUtility.h"
#include "ofxGenericButtonView.h"
#include "ofxGenericLocalization.h"
#include "ofxGenericImageView.h"
#include "ofxGenericTextView.h"


inline ofRectangle getGeneratedViewTemplates_iPadFrame()
{
    return ofRectangle(0.0f, 0.0f, 320.0f, 568.0f);
}

inline void populateGeneratedViewTemplates_iPad( ofPtr< ofxGenericView > rootView, ofPtr< ofxGenericButtonView > &variableNameButton, ofPtr< ofxGenericView > &variableNameView, ofPtr< ofxGenericImageView > &variableNameImage, ofPtr< ofxGenericTextView > &variableNameLabel )
{
	rootView->setContentMode( ofxGenericContentModeScaleToFill );
	rootView->setVisible( true );
	rootView->setFrame( ofRectangle( 0.0f, 0.0f, 320.0f, 568.0f ) );
	rootView->setBackgroundColor( ofColor( 255, 255, 255, 255 ) );
	rootView->setAutoresizingMask( ofxGenericViewAutoresizingFlexibleWidth | ofxGenericViewAutoresizingFlexibleHeight );
	rootView->setAlpha( 1.0f );
	rootView->setClipSubviews( false );

	variableNameButton = ofxGenericButtonView::create( ofxGenericButtonTypeRoundedRect );
	variableNameButton->setVisible( true );
	variableNameButton->setFrame( ofRectangle( 124.0f, 482.0f, 73.0f, 44.0f ) );
	variableNameButton->setAlpha( 1.0f );
	variableNameButton->setDownTextColor( ofColor( 255, 255, 255, 255 ) );
	variableNameButton->setFont( ".HelveticaNeueInterface-MediumP4", variableNameButton->getFontSize() );
	variableNameButton->setText( ofxGLocalized( "ButtonTitleLocalizationKey", "Button" ) );
	variableNameButton->setNumberOfLines( 1 );
	variableNameButton->setBackgroundImage( "backgroundImage.png" );
	variableNameButton->setFont( variableNameButton->getFontName(), 15.0f );
	variableNameButton->setEnabled( true );
	variableNameButton->setDownBackgroundImage( "backgroundImageDown.png" );
	variableNameButton->setLineBreakMode( ofxGenericTextLinebreakModeMiddleTruncation );
	variableNameButton->setTextColor( ofColor( 56, 84, 135, 255 ) );
	variableNameButton->setTextAlignment( ofxGenericTextHorizontalAlignmentLeft );
	variableNameButton->setBackgroundColor( ofColor( 0, 0, 0, 0 ) );
	variableNameButton->setDelegate( dynamic_pointer_cast< ofxGenericButtonViewDelegate >( rootView ) );
	variableNameButton->setContentMode( ofxGenericContentModeScaleToFill );
	variableNameButton->setClipSubviews( false );
	variableNameButton->setAutoresizingMask( ofxGenericViewAutoresizingRightMargin | ofxGenericViewAutoresizingBottomMargin );
	rootView->addChildView( variableNameButton );

	variableNameView = ofxGenericView::create( );
	variableNameView->setContentMode( ofxGenericContentModeScaleToFill );
	variableNameView->setVisible( true );
	variableNameView->setFrame( ofRectangle( 80.0f, 85.0f, 160.0f, 284.0f ) );
	variableNameView->setBackgroundColor( ofColor( 255, 255, 255, 255 ) );
	variableNameView->setAutoresizingMask( ofxGenericViewAutoresizingRightMargin | ofxGenericViewAutoresizingBottomMargin );
	variableNameView->setAlpha( 1.0f );
	variableNameView->setClipSubviews( false );
	rootView->addChildView( variableNameView );

	// Note: no image set for view
	variableNameImage = ofxGenericImageView::create(  );
	variableNameImage->setClipSubviews( false );
	variableNameImage->setVisible( true );
	variableNameImage->setFrame( ofRectangle( 40.0f, 353.0f, 240.0f, 128.0f ) );
	variableNameImage->setBackgroundColor( ofColor( 0, 0, 0, 0 ) );
	variableNameImage->setContentMode( ofxGenericContentModeScaleToFill );
	variableNameImage->setAutoresizingMask( ofxGenericViewAutoresizingRightMargin | ofxGenericViewAutoresizingBottomMargin );
	variableNameImage->setAlpha( 1.0f );
	rootView->addChildView( variableNameImage );

	variableNameLabel = ofxGenericTextView::create( );
	variableNameLabel->setClipSubviews( true );
	variableNameLabel->setVisible( true );
	variableNameLabel->setFrame( ofRectangle( 124.0f, 20.0f, 42.0f, 21.0f ) );
	variableNameLabel->setAlpha( 1.0f );
	variableNameLabel->setTextColor( ofColor( 0, 0, 0, 255 ) );
	variableNameLabel->setText( ofxGLocalized( "LabelTextLocalizationKey", "Label" ) );
	variableNameLabel->setFont( ".HelveticaNeueInterface-M3", variableNameLabel->getFontSize() );
	variableNameLabel->setBackgroundColor( ofColor( 0, 0, 0, 0 ) );
	variableNameLabel->setLineBreakMode( ofxGenericTextLinebreakModeTailTruncation );
	variableNameLabel->setTextAlignment( ofxGenericTextHorizontalAlignmentLeft );
	variableNameLabel->setFont( variableNameLabel->getFontName(), 17.0f );
	variableNameLabel->setContentMode( ofxGenericContentModeLeft );
	variableNameLabel->setNumberOfLines( 1 );
	variableNameLabel->setAutosizeFontToFitText( false );
	variableNameLabel->setAutoresizingMask( ofxGenericViewAutoresizingRightMargin | ofxGenericViewAutoresizingBottomMargin );
	rootView->addChildView( variableNameLabel );
}

inline void populatePreserveGeneratedViewTemplates_iPad( ofPtr< ofxGenericView > rootView, bool preserveTopLeft, bool preserveSize, ofPtr< ofxGenericButtonView > &variableNameButton, ofPtr< ofxGenericView > &variableNameView, ofPtr< ofxGenericImageView > &variableNameImage, ofPtr< ofxGenericTextView > &variableNameLabel )
{
    ofRectangle preservedFrame = rootView->getFrame();

    populateGeneratedViewTemplates_iPad( rootView, variableNameButton, variableNameView, variableNameImage, variableNameLabel );
    ofRectangle generatedFrame = getGeneratedViewTemplates_iPadFrame();
    if ( !preserveTopLeft )
    {
        preservedFrame.x = generatedFrame.x;
        preservedFrame.y = generatedFrame.y;
    }

    if ( !preserveSize )
    {
        preservedFrame.width = generatedFrame.width;
        preservedFrame.height = generatedFrame.height;
    }
    if ( preserveTopLeft || preserveSize )
    {
        rootView->setFrame( preservedFrame );
    }
}

inline ofPtr< ofxGenericView > constructGeneratedViewTemplates_iPad( ofPtr< ofxGenericButtonView > &variableNameButton, ofPtr< ofxGenericView > &variableNameView, ofPtr< ofxGenericImageView > &variableNameImage, ofPtr< ofxGenericTextView > &variableNameLabel )
{
    ofPtr< ofxGenericView > rootView = ofxGenericView::create();
    populateGeneratedViewTemplates_iPad( rootView, variableNameButton, variableNameView, variableNameImage, variableNameLabel );
    return rootView;
}
